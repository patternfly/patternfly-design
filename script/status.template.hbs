<html>
<head>
  <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.21.0/css/patternfly.css'>
  <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.21.0/css/patternfly-additions.css'>
  <script defer src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js'></script>
  <script defer src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js'></script>
  <script defer>
  (function() {
    var maxDays = 0;
    var today = new Date();

    function initDates() {
      var endDate = toDate(0);
      updateSlider(document.getElementById('endDaysSlider'), 0);
      updateInput(document.getElementById('endDaysInput'), endDate);
      updateOutput(document.getElementById('endDaysOutput'), 0);

      let days = getQueryStringValue('days') || 30;
      days = -1 * days;
      var startDate = toDate(days);
      updateSlider(document.getElementById('startDaysSlider'), days);
      updateInput(document.getElementById('startDaysInput'), startDate);
      updateOutput(document.getElementById('startDaysOutput'), days);
    }
    function toDays(date) {
      var one_day=1000*60*60*24;
      var days = Math.round((date.getTime() - today.getTime()) / one_day);
      return days;
    }
    function toDate(days) {
      var date = new Date();
      date.setDate(today.getDate() + days);
      return date;
    }
    function updateSlider(slider, days) {
      slider.value = maxDays + days;
    }
    function updateInput(input, date) {
      input.value = date.toISOString().substring(0, 10);
    }
    function updateOutput(output, days) {
      output.innerText = days + ' days';
    }
    function getQueryStringValue (key) {
      return decodeURIComponent(window.location.search.replace(new RegExp('^(?:.*[&\\?]' + encodeURIComponent(key).replace(/[\.\+\*]/g, '\\$&') + '(?:\\=([^&]*))?)?.*$', 'i'), '$1'));
    }
    function findMaxDays(nodeList) {
      let now = new Date().getTime();
      maxDays = 0;
      for (let i = 0; i < nodeList.length; i++) {
        let icon = nodeList[i];
        let createdDate = new Date(icon.dataset.created).getTime();
        let days = (now - createdDate) / 1000 / 3600 / 24;
        maxDays = Math.max(days, maxDays);
      }
      maxDays = Math.min(365, Math.floor(maxDays));
      document.getElementById('startDaysSlider').setAttribute('max', maxDays);
      document.getElementById('endDaysSlider').setAttribute('max', maxDays);
    };

    function updateClass(icon) {
      if (icon.dataset.status == 'created') {
          icon.classList.remove('fa-file-text-o', 'pf-design-table__icon--present', 'pf-design-table__icon--changed');
          icon.classList.add('fa-star', 'pf-design-table__icon--new');
        } else if (icon.dataset.status == 'changed') {
          icon.classList.remove('fa-star', 'pf-design-table__icon--present', 'pf-design-table__icon--new');
          icon.classList.add('fa-file-text-o', 'pf-design-table__icon--changed');
        } else {
          icon.classList.remove('fa-star', 'pf-design-table__icon--changed', 'pf-design-table__icon--new');
          icon.classList.add('fa-file-text-o', 'pf-design-table__icon--present');
        }
    }

    function setAnimationListeners(nodeList) {
      for (let i = 0; i < nodeList.length; i++) {
        let icon = nodeList[i];
        icon.addEventListener('animationend', function(event) {
          if (event.animationName == 'appear') {
            icon.classList.remove('add-icon');
          } else if (event.animationName == 'disappear') {
            icon.classList.remove('remove-icon');
            updateClass(this);
            icon.classList.add('add-icon');
          }
        });
      }
    }

    function updateFileIcons(nodeList) {
      var startDaysInput = document.getElementById('startDaysInput');
      var endDaysInput = document.getElementById('endDaysInput');
      var endDate = new Date(endDaysInput.value).getTime();
      var startDate = new Date(startDaysInput.value).getTime();
      for (let i = 0; i < nodeList.length; i++) {
        let icon = nodeList[i];
        let changedDate = new Date(icon.dataset.changed).getTime();
        let createdDate = new Date(icon.dataset.created).getTime();
        let oldStatus = icon.dataset.status;
        if (startDate < createdDate &&  createdDate < endDate) {
          icon.dataset.status = 'created';
        } else if (startDate < changedDate &&  changedDate < endDate) {
          icon.dataset.status = 'changed';
        } else {
          icon.dataset.status = 'present';
        };
        if (!oldStatus) {
          updateClass(icon);
        } else if (oldStatus != icon.dataset.status) {
          icon.classList.add('remove-icon');
        }

      }
    }
    function init() {
      let nodeList = document.querySelectorAll('.pf-design-table__cell--present .pf-design-table__icon')
      findMaxDays(nodeList);
      setAnimationListeners(nodeList);
      initDates();
      updateFileIcons(nodeList);
      var endDate = new Date();
      var startDate = new Date();
      startDate.setDate(endDate.getDate() - maxDays);
      $('#startDaysInputDiv').datepicker({
        autoclose: true,
        orientation: "auto",
        todayBtn: "linked",
        todayHighlight: true,
        format: 'yyyy-mm-dd',
        startDate: startDate,
        endDate: endDate
      });
      $('#endDaysInputDiv').datepicker({
        autoclose: true,
        orientation: "auto",
        todayBtn: "linked",
        todayHighlight: true,
        format: 'yyyy-mm-dd',
        startDate: startDate,
        endDate: endDate
      });
      document.getElementById('startDaysSlider').addEventListener('input', function() {
        let days = this.value - maxDays;
        let date = toDate(days);
        updateInput(document.getElementById('startDaysInput'), date);
        updateOutput(document.getElementById('startDaysOutput'), days);
        updateFileIcons(nodeList);
      });
      document.getElementById('startDaysInput').addEventListener('change', function() {
        let date = new Date(this.value);
        let days = toDays(date);
        updateSlider(document.getElementById('startDaysSlider'), days);
        updateOutput(document.getElementById('startDaysOutput'), days);
        updateFileIcons(nodeList);
      });
      $('#startDaysInputDiv').datepicker().on('changeDate', function(e) {
        let date = new Date(e.date);
        let days = toDays(date);
        updateSlider(document.getElementById('startDaysSlider'), days);
        updateOutput(document.getElementById('startDaysOutput'), days);
        updateFileIcons(nodeList);
      });
      document.getElementById('endDaysSlider').addEventListener('input', function() {
        let days = this.value - maxDays;
        let date = toDate(days);
        updateInput(document.getElementById('endDaysInput'), date);
        updateOutput(document.getElementById('endDaysOutput'), days);
        updateFileIcons(nodeList);
      });
      $('#endDaysInputDiv').datepicker().on('changeDate', function(e) {
        let date = new Date(e.date);
        let days = toDays(date);
        updateSlider(document.getElementById('endDaysSlider'), days);
        updateOutput(document.getElementById('endDaysOutput'), days);
        updateFileIcons(nodeList);
      });
    }
    window.pfStatusTable = {
      init: init
    }
  })();
  </script>
  <script defer>
    window.onload = function() {
      var config = pfStatusTable.init();
    };
  </script>
  <style>

  @keyframes appear {
    from { filter: opacity(0) }
    to { filter: opacity(1) }
  }

  @keyframes disappear {
    from { filter: opacity(1) }
    to { filter: opacity(0) }
  }

  .pf-design-table {
    width: auto;
    margin: auto;
  }

  .pf-design-table__cell {
    text-align: center;
  }
  .pf-design-table__cell--missing {
    background-color: #ffe6e6;
  }
  .pf-design-table__icon {
    line-height: 1.66666667;
  }
  .pf-design-table__icon--new {
    color: #f0ab00;
  }
  .pf-design-table__icon--changed {
    color: #00659c;
  }
  .pf-design-table__icon--present {
    color: #8b8d8f;
  }
  .pf-design-table__cell__impl .pf-design-table__icon--present {
    color: #92d400;
  }
  .pf-design-table__icon--missing {
    color: #a30000;
  }
  .pf-design-table__days-slider {
    display: flex;
  }
  .pf-design-table__days-output {
    font-size: 100%;
    padding: 3px;
    flex-shrink: 0;
  }
  .pf-design-table__row__header-files {
    white-space: nowrap;
  }
  .remove-icon {
    animation: disappear .2s ease;
    animation-fill-mode: forwards;
  }
  .add-icon {
    animation: appear .2s ease;
    animation-fill-mode: forwards;
  }
  .pf-design-table__legend_row {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    white-space: nowrap;
  }
  .pf-design-table__date-input-container {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    white-space: nowrap;
  }

  .table-striped > tbody > tr:nth-of-type(odd) > td.pf-design-table__cell__impl {
    background-color: #f5f5f5;
  }

  .table-striped > tbody > tr:nth-of-type(even) > td.pf-design-table__cell__impl {
    background-color: #ededed;
  }

  </style>
</head>
<body>
  <table class='table table-striped pf-design-table' >
    <tbody class='pf-design-table__legend'>
      <tr><th colspan='4'><h2>File status indicators</h2></th></tr>
      <tr>
        <td colspan='4'>
          <div class='pf-design-table__date-input-container'>
            <div>
              <label for='startDaysInput'>Start Date</label>
              <div id="startDaysInputDiv" class="input-group date">
                <input type="text" class="form-control bootstrap-datepicker" id='startDaysInput' readonly><span class="input-group-addon"><span class="fa fa-calendar"></span></span>
              </div>
              <input id='startDaysSlider' type='range' min='0' value='70' max='100' step='1'/>
              <output class='pf-design-table__days-output days' for='startDaysSlider' id='startDaysOutput'>50 days</output>
            </div>
            <div>
              <label for='endDaysInput'>End Date</label>
              <div id="endDaysInputDiv" class="input-group date">
                <input type="text" class="form-control bootstrap-datepicker" id='endDaysInput' readonly><span class="input-group-addon"><span class="fa fa-calendar"></span></span>
              </div>
              <input id='endDaysSlider' type='range' min='0' value='100' max='100' step='1'/>
              <output class='pf-design-table__days-output days' for='endDaysSlider' id='endDaysOutput'>50 days</output>
            </div>
          </div>
        </td>
      </tr>
      <tr>
        <td colspan='4'>
          <div class='pf-design-table__legend_row'>
            <span class='col-xs-3'><span class='fa fa-star pf-design-table__icon pf-design-table__icon--new'></span> Created</span>
            <span class='col-xs-3'><span class='fa fa-file-text-o pf-design-table__icon pf-design-table__icon--changed'></span> Modified</span>
            <span class='col-xs-3'><span class='fa fa-file-text-o pf-design-table__icon pf-design-table__icon--present'></span> Present</span>
            <span class='col-xs-3'><span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span> Missing</span>
          </div>
        </td>
      </tr>
    </tbody>

    {{#each families}}
      <tbody class='pf-design-table__files'>
        <tr><th colspan='8'><h2>{{name}}</h2></th></tr>
        <tr class='pf-design-table__row__header-files'>
          <th>Pattern</th><th>overview.md</th><th>design.md</th><th>site.md</th>
          <th>Core</th><th>Angular 1</th><th>Angular 4+ (ng)</th><th>React</th>
        </tr>
        {{#each patterns}}
          <tr>
            <td><a href='https://github.com/patternfly/patternfly-design/tree/master/pattern-library/{{../name}}/{{name}}'>{{name}}</a></td>
            {{#eachInMap files }}
              {{#compare value.status '==' 'missing'}}
                <td class='pf-design-table__cell pf-design-table__cell--missing'>
                  <span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span>
                </td>
              {{else}}
                <td class='pf-design-table__cell pf-design-table__cell--present'>
                  <span class='fa fa-file-text-o pf-design-table__icon pf-design-table__icon--changed'
                        data-created='{{ value.dateCreated }}'
                        data-changed='{{ value.dateChanged }}'
                        title='Modified on {{ value.dateChangedFormatted }}. Created on {{ value.dateCreatedFormatted }}'>
                  </span>
                </td>
              {{/compare}}
              {{#compare key '==' 'site'}}
                <td class="pf-design-table__cell pf-design-table__cell__impl">
                  {{#if value.frontmatter.impl_jquery}}
                    <a href="{{value.frontmatter.impl_jquery}}" target="_new">
                      <span class='fa fa-check pf-design-table__icon pf-design-table__icon--present'></span>
                    </a>
                  {{else}}
                    <span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span>
                  {{/if}}
                </td>
                <td class="pf-design-table__cell pf-design-table__cell__impl">
                  {{#if value.frontmatter.impl_angular}}
                    <a href="{{value.frontmatter.impl_angular}}" target="_new">
                      <span class='fa fa-check pf-design-table__icon pf-design-table__icon--present'></span>
                    </a>
                  {{else}}
                    <span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span>
                  {{/if}}
                </td>
                <td class="pf-design-table__cell pf-design-table__cell__impl">
                  {{#if value.frontmatter.impl_ng}}
                    <a href="{{value.frontmatter.impl_ng}}" target="_new">
                      <span class='fa fa-check pf-design-table__icon pf-design-table__icon--present'></span>
                    </a>
                  {{else}}
                    <span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span>
                  {{/if}}
                </td>
                <td class="pf-design-table__cell pf-design-table__cell__impl">
                  {{#if value.frontmatter.impl_react}}
                    <a href="{{value.frontmatter.impl_react}}" target="_new">
                      <span class='fa fa-check pf-design-table__icon pf-design-table__icon--present'></span>
                    </a>
                  {{else}}
                    <span class='pficon pficon-close pf-design-table__icon pf-design-table__icon--missing'></span>
                  {{/if}}
                </td>
              {{/compare}}
            {{/eachInMap}}
          </tr>
        {{/each}}
      </tbody>
    {{/each}}
  </table>
  </body>
</html>
